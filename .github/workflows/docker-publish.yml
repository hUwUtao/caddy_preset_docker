name: Build and publish multi-arch Caddy image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/huwutao/caddy_preset_docker

jobs:
  build-amd64:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build amd64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          outputs: type=registry
          push: true
          tags: ${{ env.IMAGE_NAME }}:amd64
          cache-from: type=gha,scope=amd64
          cache-to: type=gha,scope=amd64,mode=max

  build-arm64:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build arm64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          outputs: type=registry
          push: true
          tags: ${{ env.IMAGE_NAME }}:arm64
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,scope=arm64,mode=max

  manifest:
    runs-on: ubuntu-24.04
    needs: [build-amd64, build-arm64]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ${{ env.IMAGE_NAME }}:latest \
            --amend ${{ env.IMAGE_NAME }}:amd64 \
            --amend ${{ env.IMAGE_NAME }}:arm64
          docker manifest push ${{ env.IMAGE_NAME }}:latest
